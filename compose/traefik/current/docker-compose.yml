
version: "3.9"
services:
  traefik:
    container_name: traefik
    hostname: traefik
    domainname: delaporte.manakin-velociraptor.ts.net #traefik.delaporte.manakin-velociraptor.ts.net
    image: traefik:latest
    env_file: /home/pyromaniac/Repos/docker/compose/traefik/current/configs/traefik/traefik.env
    environment:
      - SERVICENAME=traefik
      - VIRTUAL_HOST=traefik.delaporte.${DOCKER_BASE_URL}
      - TZ=Africa/Johannesburg
      - PGID=1000
      - PUID=1000
      - UMASK=002
      - VERSION=docker    
        # extra_hosts:
        #- "traefik.delaporte.manakin-velociraptor.ts.net:172.28.0.2"    
    command: 
      - "--providers.docker"
      - "--providers.file.filename=/root/.config/ssl.toml"
      - "--providers.file.watch=true"  
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker.exposedbydefault=false"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--log.level=DEBUG"
      - "--accessLog.filePath=/log/traefik.log"   
      - "--accesslog=true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-http.entrypoints=web"
      - "traefik.http.routers.traefik-http.rule=(Host(`delaporte.${DOCKER_BASE_URL}`) || Host(`traefik.delaporte.${DOCKER_BASE_URL}`))"
      - "traefik.http.routers.traefik-http.middlewares=traefik-https"
      - "traefik.http.middlewares.traefik-https.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.rule=(Host(`delaporte.${DOCKER_BASE_URL}`) || Host(`traefik.delaporte.${DOCKER_BASE_URL}`))"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    networks:
      - traefik_public
    ports:
      - target: 80
        published: 80
        protocol: tcp
      - target: 443
        published: 443
        protocol: tcp
      - target: 8080
        published: 8080
        protocol: tcp  
    volumes:
      - type: volume
        source: global_certs
        target: "/certs"        
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock         
      - type: bind
        source: /home/pyromaniac/Repos/docker/compose/traefik/current/configs/traefik/traefik-ssl.toml
        target: /root/.config/ssl.toml
      - type: bind
        source: /home/pyromaniac/Repos/docker/compose/traefik/current/configs/traefik
        target: /configs
      - type: bind
        source: /home/pyromaniac/Repos/docker/compose/traefik/current/root
        target: /root
      - type: bind
        source: /home/pyromaniac/Repos/docker/compose/traefik/current/logs/traefik.log
        target: /log/traefik.log   
    restart: always


    # Global mode makes an instance of traefik listen on _every_ node, so that regardless of which
    # node the request arrives on, it'll be forwarded to the correct backend service.
   # deploy:
   #   mode: global
   #   labels:
   #     - "traefik.docker.network=traefik_public"
   #     - "traefik.http.routers.api.rule=Host(`traefik.example.com`)"
   #     - "traefik.http.routers.api.entrypoints=https"
   #     - "traefik.http.routers.api.tls.domains[0].main=example.com"
   #     - "traefik.http.routers.api.tls.domains[0].sans=*.example.com"        
   #     - "traefik.http.routers.api.tls=true"
   #     - "traefik.http.routers.api.tls.certresolver=main"
   #     - "traefik.http.routers.api.service=api@internal"
   #     - "traefik.http.services.dummy.loadbalancer.server.port=9999"

        # uncomment this to enable forward authentication on the traefik api/dashboard
        #- "traefik.http.routers.api.middlewares=forward-auth"      
   #   placement:
   #     constraints: [node.role == manager]

networks:
  traefik_public:
    name: traefik_public
    driver: bridge
#    driver_opts:
#      com.docker.network.enable_ipv6: "true"
    attachable: true
    external: false
    
    
volumes:
  global_certs:
    name: global_certs
    external: true


