
version: '3.9'

services:
  traefik:
    image: traefik:latest
    container_name: "${DOCKER_NAME}_traefik"
    environment:      
      - SERVICENAME=traefik
      - VERSION=docker
      - VIRTUAL_HOST=docker.localdev
    command:
      - --providers.docker=true
      # Enable the API handler in insecure mode (for Dashboard to be abailable from entry point)
      - --api.insecure=true
      # Defines the path to the configuration file with the certificates list.
      - --providers.file.filename=/root/.config/ssl.toml
      # Define Traefik entry points to port [80] for http and port [443] for https.
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
    networks:
      # Define the network on which traefik is going to operate.
      - web
    ports:
      # Open traefik http [80] and https [443] ports.
      - '80:80'
      - '8080:8080'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # Mount the configuration file with the certificates list.
      - /docker/containers/docker4localdev/traefik-ssl.toml:/root/.config/ssl.toml
      # Mount the folder containing the certificates for https.
      - /docker/containers/docker4localdev/certs/:/certs/
      # Mount the folder containing network and dns
      - /docker/containers/docker4localdev/etc/:/etc/
    labels:
      - "traefik.enable=true"
      # Enable Traefik Dashboard entrypoint on http.
      - "traefik.http.routers.traefik-http.entrypoints=web"
      # Define Traefik Dashboard http host.
      - "traefik.http.routers.traefik-http.rule=Host(`${DOCKER_BASE_URL}`)"
      # Define http middleware and redirection to https.
      - "traefik.http.routers.traefik-http.middlewares=traefik-https"
      - "traefik.http.middlewares.traefik-https.redirectscheme.scheme=https"
      # Enable Traefik Dashboard entrypoint on https.
      - "traefik.http.routers.traefik.entrypoints=websecure"
      # By default the Traefik Dashboard operates on the port [8080].
      # Define a load balancer to route the entry point to [8080].
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      # Define Traefik Dashboard host.
      - "traefik.http.routers.traefik.rule=Host(`${DOCKER_BASE_URL}`)"
      # Instructs Traefik that the current router is dedicated to HTTPS requests only.
      - "traefik.http.routers.traefik.tls=true"

  portainer:
    image: portainer/portainer
    container_name: "${DOCKER_NAME}_portainer"
    environment:      
      - SERVICENAME=portainer
      - VERSION=docker
      - VIRTUAL_HOST=portainer.docker.localdev
    command: --no-auth -H unix:///var/run/docker.sock
    #,ports:
    # - 9444:9443
    networks:
      - web
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    labels:
      #- traefik.enable="true"
      #- traefik.port=9443
      # Enable Portainer handler entrypoint on http.
      - "traefik.http.routers.${DOCKER_NAME}_portainer-http.entrypoints=web"
      # Define Portainer handler http host.
      - "traefik.http.routers.${DOCKER_NAME}_portainer-http.rule=Host(`portainer.${DOCKER_BASE_URL}`)"
      # Define http middleware and redirection to https.
      - "traefik.http.routers.${DOCKER_NAME}_portainer-http.middlewares=${DOCKER_NAME}_portainer-https"
      - "traefik.http.middlewares.${DOCKER_NAME}_portainer-https.redirectscheme.scheme=https"
      # Enable Portainer handler entrypoint on https.
      - "traefik.http.routers.${DOCKER_NAME}_portainer.entrypoints=websecure"
      # Define Portainer handler host.
      - "traefik.http.routers.${DOCKER_NAME}_portainer.rule=Host(`portainer.${DOCKER_BASE_URL}`)"
      # Instructs Traefik that the current router is dedicated to HTTPS requests only.
      - "traefik.http.routers.${DOCKER_NAME}_portainer.tls=true"
      # Define on which network Traefik is operating.
      - "traefik.docker.network=web"

  jackett:
    image: ghcr.io/linuxserver/jackett:latest
    container_name: ${DOCKER_NAME}_jackett
    hostname: jackett
    environment:      
      - SERVICENAME=jackett
      - VERSION=docker
      - VIRTUAL_HOST=jackett.docker.localdev
    networks:
      - web
    labels:
      # Enable Portainer handler entrypoint on http.
      - "traefik.http.routers.${DOCKER_NAME}_jackett-http.entrypoints=web"
      # Define Portainer handler http host.
      - "traefik.http.routers.${DOCKER_NAME}_jackett-http.rule=Host(`jackett.${DOCKER_BASE_URL}`)"
      # Define http middleware and redirection to https.
      - "traefik.http.routers.${DOCKER_NAME}_jackett-http.middlewares=${DOCKER_NAME}_jackett-https"
      - "traefik.http.middlewares.${DOCKER_NAME}_jackett-https.redirectscheme.scheme=https"
      # Enable Portainer handler entrypoint on https.
      - "traefik.http.routers.${DOCKER_NAME}_jackett.entrypoints=websecure"
      # Define Portainer handler host.
      - "traefik.http.routers.${DOCKER_NAME}_jackett.rule=Host(`jackett.${DOCKER_BASE_URL}`)"
      # Instructs Traefik that the current router is dedicated to HTTPS requests only.
      - "traefik.http.routers.${DOCKER_NAME}_jackett.tls=true"
      # Define on which network Traefik is operating.
      - "traefik.docker.network=web"
 
 
  hydra2:
    image: ghcr.io/linuxserver/nzbhydra2:latest
    container_name: "${DOCKER_NAME}_hydra2"
    environment:      
      - SERVICENAME=hydra2
      - VERSION=docker
      - VIRTUAL_HOST=hydra2.docker.localdev
    networks:
      - web
    labels:
      - "traefik.http.routers.${DOCKER_NAME}_hydra2-http.entrypoints=web"
      - "traefik.http.routers.${DOCKER_NAME}_hydra2-http-rule=Host(`hydra2.${DOCKER_BASE_URL}`)"
      - "traefik.http.routers.${DOCKER_NAME}_hydra2-http.middlewares=${DOCKER_NAME}_hydra2-https"
      - "traefik.http.routers.${DOCKER_NAME}_hydra2.entrypoints=websecure"
      - "traefik.http.middlewaress.${DOCKER_NAMWE}_hydra2-https.redirectscheme.scheme=https"
      - "traefik.http.routers.${DOCKER_NAME}_hydra2.rule=Host(`hydra2.${DOCKER_BASE_URL}`)"
      - "traefik.http.routers.${DOCKER_NAME}_hydra2.tls=true"
      - "traefik.docker.network=web"     
      
  whoami:
    image: containous/whoami
    container_name: "${DOCKER_NAME}_whoami"
    environment:      
      - SERVICENAME=whoami
      - VIRTUAL_HOST=whoami.docker.localdev
    networks:
      - web
    labels:
      # Enable Whoami handler entrypoint on http.
      - "traefik.http.routers.${DOCKER_NAME}_whoami-http.entrypoints=web"
      - "traefik.http.routers.${DOCKER_NAME}_whoami-http.rule=Host(`whoami.${DOCKER_BASE_URL}`)"
      - "traefik.http.routers.${DOCKER_NAME}_whoami-http.middlewares=${DOCKER_NAME}_whoami-https"
      - "traefik.http.middlewares.${DOCKER_NAME}_whoami-https.redirectscheme.scheme=https"
      - "traefik.http.routers.${DOCKER_NAME}_whoami.entrypoints=websecure"
      - "traefik.http.routers.${DOCKER_NAME}_whoami.rule=Host(`whoami.${DOCKER_BASE_URL}`)"
      - "traefik.http.routers.${DOCKER_NAME}_whoami.tls=true"
      - "traefik.docker.network=web"

networks:
  # Define the network on which is going to operate Traefik.
  web:
    external: true
