VERSION=docker
SERVICENAME=logspout
TZ=Africa/Johannesburg
PGID=1000
PUID=1000

#Logspout also allows to ignore containers by specifying a list of labels using the environment variables EXCLUDE_LABELS or EXCLUDE_LABEL, using the ; as separator:

# ALLOW_TTY - include logs from containers started with -t or --tty (i.e. Allocate a pseudo-TTY)
# BACKLOG - suppress container tail backlog
# TAIL - specify the number of lines in the log tail to capture when logspout starts (default all)
# DEBUG - emit debug logs
# EXCLUDE_LABEL - exclude containers with a given label. The label can have a value of true or a custom value matched with : after the label name like label_name:label_value.
# INACTIVITY_TIMEOUT - detect hang in Docker API (default 0)
# HTTP_BIND_ADDRESS - configure which interface address to listen on (default 0.0.0.0)
# PORT or HTTP_PORT - configure which port to listen on (default 80)
# RAW_FORMAT - log format for the raw adapter (default {{.Data}}\n)
# RETRY_COUNT - how many times to retry a broken socket (default 10)
# ROUTESPATH - path to routes (default /mnt/routes)
# SYSLOG_DATA - datum for data field (default {{.Data}})
# SYSLOG_FORMAT - syslog format to emit, either rfc3164 or rfc5424 (default rfc5424)
# SYSLOG_HOSTNAME - datum for hostname field (default {{.Container.Config.Hostname}})
# SYSLOG_PID - datum for pid field (default {{.Container.State.Pid}})
# SYSLOG_PRIORITY - datum for priority field (default {{.Priority}})
# SYSLOG_STRUCTURED_DATA - datum for structured data field
# SYSLOG_TAG - datum for tag field (default {{.ContainerName}}+route.Options["append_tag"])
# SYSLOG_TCP_FRAMING - for TCP or TLS transports, whether to use octet-counted framing in emitted messages or traditional LF framing (default traditional)
# SYSLOG_TIMESTAMP - datum for timestamp field (default {{.Timestamp}})
# MULTILINE_ENABLE_DEFAULT - enable multiline logging for all containers when using the multiline adapter (default true)
# MULTILINE_MATCH - determines which lines the pattern should match, one of first|last|nonfirst|nonlast, for details see: MULTILINE_MATCH (default nonfirst)
# MULTILINE_PATTERN - pattern for multiline logging, see: MULTILINE_MATCH (default: ^\s)
# MULTILINE_FLUSH_AFTER - maximum time between the first and last lines of a multiline log entry in milliseconds (default: 500)
# MULTILINE_SEPARATOR - separator between lines for output (default: \n)

# LOGSPOUT_TLS_DISABLE_SYSTEM_ROOTS	when set to true it disables loading the system trust store into the trust store of logspout
# LOGSPOUT_TLS_CA_CERTS	a comma separated list of filesystem paths to pem encoded CA certificates that should be added to logspout's TLS trust store. Each pem file can contain more than one certificate
# LOGSPOUT_TLS_CLIENT_CERT	filesystem path to pem encoded x509 client certificate to load when TLS mutual authentication is desired
# LOGSPOUT_TLS_CLIENT_KEY	filesystem path to pem encoded client private key to load when TLS mutual authentication is desired
# LOGSPOUT_TLS_HARDENING	when set to true it enables stricter client TLS settings designed to mitigate some known TLS vulnerabilities
# Example TLS settings
# The following settings cover some common use cases. When running docker, use the -e flag to supply environment variables

# add your own CAs to the list of trusted authorities

# export LOGSPOUT_TLS_CA_CERTS="/opt/tls/ca/myRootCA1.pem,/opt/tls/ca/myRootCA2.pem"
# force logspout to ONLY trust your own CA

# export LOGSPOUT_TLS_DISABLE_SYSTEM_ROOTS=true
# export LOGSPOUT_TLS_CA_CERTS="/opt/tls/ca/myRootCA1.pem"
# configure client authentication

# export LOGSPOUT_TLS_CLIENT_CERT="/opt/tls/client/myClient.pem"
# export LOGSPOUT_TLS_CLIENT_KEY="/opt/tls/client/myClient-key.pem"
# highest possible security settings (paranoid mode)

# export LOGSPOUT_TLS_DISABLE_SYSTEM_ROOTS=true
# export LOGSPOUT_TLS_HARDENING=true
# export LOGSPOUT_TLS_CA_CERTS="/opt/tls/ca/myRootCA1.pem"
# export LOGSPOUT_TLS_CLIENT_CERT="/opt/tls/client/myClient.pem"
# export LOGSPOUT_TLS_CLIENT_KEY="/opt/tls/client/myClient-key.pem"

# docker run --name logspout -d --volume=/var/run/docker.sock:/var/run/docker.sock \
#     -e SYSLOG_STRUCTURED_DATA="<Loggly API Key>@41058 tag=\"some tag name\"" \
#     gliderlabs/logspout \
#     syslog+tcp://logs-01.loggly.com:514