#!/bin/bash
# All containers (see media-services.txt) that access rclone/MergerFS mounts set to NOT restart automatically at boot time. 
# This is because, rclone can take a few seconds/minutes to mount remote drives.
# This script checks the required mounts every 5 seconds and as soon as required drives are mounted, it starts the "media" containers.

# CHECKING FOR DRIVE MOUNTS
num_drives=3
drive1="/media/drive"
drive1_seconds=0
drive1_status=0
drive2="/media/crypt"
drive2_seconds=0
drive2_status=0
drive3="/media/data/media"
drive3_seconds=0
drive3_status=0

mounted=0
rounds=0

while [ "$mounted" -ne "$num_drives" ]
do
	if mount | grep ${drive1} > /dev/null; then
		if [[ "$drive1_status" -eq 0 ]]; then
			mounted=$((mounted+1))
			drive1_seconds=$((rounds * 5))
			drive1_status=1
		fi
	fi
	if mount | grep ${drive2} > /dev/null; then
		if [[ "$drive2_status" -eq 0 ]]; then
			mounted=$((mounted+1))
			drive2_seconds=$((rounds * 5))
			drive2_status=1
		fi
	fi
	if mount | grep ${drive3} > /dev/null; then
		if [[ "$drive3_status" -eq 0 ]]; then
			mounted=$((mounted+1))
			drive3_seconds=$((rounds * 5))
			drive3_status=1
		fi
	fi
	# Timeout if mounting is not successful after 15 min: 60 = 5 min
    if [[ $rounds -eq 180 ]]; then
      break
    fi
	sleep 5
	rounds=$((rounds + 1))
	#echo -e "$rounds\n"
done

seconds=$((rounds * 5))

if [[ "$mounted" -eq "$num_drives" ]]; then
	echo -e "All drives mounted: \n\n - $drive1 in $drive1_seconds \n - $drive2 in $drive2_seconds \n - $drive3 in $drive3_seconds\n\nStarting media containers." | mail -s "[cDoc MSG] Starting media containers" info@example.com -aFrom:cDoc@example.com
	sudo docker start $(cat /home/USER/docker/scripts/homeserver/media-services.txt)
else
	echo -e "Not all drives mounted after reboot: \n\n - $drive1 is $drive1_status \n - $drive2 is $drive2_status \n - $drive3 is $drive3_status\n\nTimed out after $seconds seconds." | mail -s "[cDoc ERROR] Mounted not equal to $num_drives." info@example.com -aFrom:cDoc@example.com
	sudo docker stop $(cat /home/USER/docker/scripts/homeserver/media-services.txt)
fi
