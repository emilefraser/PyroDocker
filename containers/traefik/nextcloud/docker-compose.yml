version: '3.7'

services:

# =============================================================
#
#	TRAEFIK - reverse proxy
#
# =============================================================

  traefik:
    image: traefik:latest
    container_name: traefik
    command:
      # - "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--providers.file.directory=/FileProvider/"
      - "--providers.file.watch=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=web-secure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web-secure.address=:443"
      - "--serverstransport.insecureskipverify=true"
      - "--certificatesresolvers.certificato.acme.dnschallenge=true"
      - "--certificatesresolvers.certificato.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.certificato.acme.dnschallenge.delaybeforecheck=10"
      - "--certificatesresolvers.certificato.acme.dnschallenge.resolvers=1.1.1.1:53"
      # - "--certificatesresolvers.certificato.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.certificato.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.certificato.acme.storage=acme.json"
      - "--ping=true"
    environment:
      CF_API_EMAIL: ${CF_API_EMAIL}
      CF_API_KEY: ${CF_API_KEY}
      CLOUDFLARE_EMAIL: ${CLOUDFLARE_EMAIL}
      CLOUDFLARE_API_KEY: ${CLOUDFLARE_API_KEY}
    container_name: traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.api.entrypoints=web-secure"
      - "traefik.http.routers.api.tls.certresolver=certificato"
      - "traefik.http.routers.api.tls.domains[0].main=*.${DOMAIN}"
      - "traefik.http.routers.api.service=api@internal"
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # So that Traefik can listen to the Docker events
      - /path/to/docker/traefik/acme.json:/acme.json
      - /path/to/docker/traefik/FileProvider/:/FileProvider/
    restart: always


# =============================================================
#
#	NEXTCLOUD
#
# =============================================================

  nextcloud:
    image: nextcloud:latest
    container_name: nextcloud
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.nextcloud.rule=Host(`drive.${DOMAIN}`)'
      - 'traefik.http.routers.nextcloud.entrypoints=web-secure'
      - 'traefik.http.routers.nextcloud.tls=true'
      - "traefik.http.routers.nextcloud.tls.certresolver=certificato"
      - "traefik.http.routers.nextcloud.tls.domains[0].main=*.${DOMAIN}"
      - "traefik.http.routers.nextcloud.service=nextclouddService"
      - "traefik.http.services.nextclouddService.loadBalancer.server.port=80"
      - "traefik.http.routers.nextcloud.middlewares=nc-rep,nc-header"
      - "traefik.http.middlewares.nc-rep.redirectregex.regex=https://(.*)/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.nc-rep.redirectregex.replacement=https://$$1/remote.php/dav/"
      - "traefik.http.middlewares.nc-rep.redirectregex.permanent=true"
      - "traefik.http.middlewares.nc-header.headers.frameDeny=true"
      - "traefik.http.middlewares.nc-header.headers.sslRedirect=true"
      - "traefik.http.middlewares.nc-header.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.nc-header.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.nc-header.headers.stsPreload=true"
      - "traefik.http.middlewares.nc-header.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.nc-header.headers.referrerPolicy=same-origin"
      - "traefik.http.middlewares.nc-header.headers.browserXssFilter=true"
      - "traefik.http.middlewares.nc-header.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.nc-header.headers.customResponseHeaders.X-Robots-Tag=none"
      - "traefik.http.middlewares.nc-header.headers.customFrameOptionsValue=SAMEORIGIN"
    volumes:
      - /path/to/docker/nextcloud/data:/var/www/html
    environment:
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_TRUSTED_DOMAINS}
      - APACHE_DISABLE_REWRITE_IP=1
      - TRUSTED_PROXIES=${NEXTCLOUD_TRUSTED_PROXIES}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=${NEXTCLOUD_DB_PASSWORD}
      - MYSQL_HOST=nextcloud-db
      - OVERWRITEPROTOCOL=https
      #- DEFAULT_PHONE_REGION=CH not working https://github.com/nextcloud/docker/issues/1465
    depends_on:
      - nextcloud-db
    restart: unless-stopped

  nextcloud-db:
    container_name: nextcloud-db
    image: mariadb
    environment:
      MYSQL_DATABASE: nextcloud
      MYSQL_PASSWORD: ${NEXTCLOUD_DB_PASSWORD}
      MYSQL_USER: nextcloud
      MYSQL_ROOT_PASSWORD: ${NEXTCLOUD_DB_PASSWORD}
      TZ: ${TIME_ZONE_ZUERICH}
    logging:
      driver: "none"
    restart: unless-stopped
    volumes:
      - /path/to/docker/nextcloud/db/:/var/lib/mysql


# =============================================================
#
#	ONLYOFFICE
#
# =============================================================

  onlyoffice:
    image: onlyoffice/documentserver
    container_name: onlyoffice
    networks:
      - net_nextcloud
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.onlyoffice.rule=Host(`office.${DOMAIN}`)'
      - 'traefik.http.routers.onlyoffice.entrypoints=web-secure'
      - 'traefik.http.routers.onlyoffice.tls=true'
      - "traefik.http.routers.onlyoffice.tls.certresolver=certificato"
      - "traefik.http.routers.onlyoffice.tls.domains[0].main=*.${DOMAIN}"
      - "traefik.http.routers.onlyoffice.service=onlyofficeService"
      - "traefik.http.routers.onlyoffice.middlewares=onlyoffice-headers"
      - "traefik.http.services.onlyofficeService.loadBalancer.server.port=80"

      - "traefik.http.middlewares.onlyoffice-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.onlyoffice-headers.headers.accesscontrolalloworiginlist=*"
    restart: unless-stopped
