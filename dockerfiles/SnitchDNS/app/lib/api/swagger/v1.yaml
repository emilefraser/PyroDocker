swagger: '2.0'
info:
  title: SnitchDNS API
  version: "1.0.0"
schemes:
  - https
securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: X-SnitchDNS-Auth
basePath: /api/v1
produces:
  - application/json
consumes:
  - application/json
security:
  - APIKeyHeader: []
paths:
  /zones:
    get:
      summary: Return all domains the user has access to
      tags:
        - zone
      parameters:
        - name: page
          in: query
          required: false
          type: integer
        - name: per_page
          in: query
          required: false
          type: integer
        - name: search
          in: query
          required: false
          type: string
          description: Domains to search for
        - name: tags
          in: query
          required: false
          type: string
          description: Comma separated tags to search for
      responses:
        200:
          description: Will return an array with all zones the user can access
          schema:
            type: object
            allOf:
              - $ref: '#/definitions/Pagination'
              - properties:
                  data:
                    type: array
                    items:
                      $ref: '#/definitions/Zone'
        401:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
    post:
      summary: Create a new zone
      tags:
        - zone
      parameters:
        - in: body
          name: zone
          schema:
            type: object
            required:
              - domain
              - active
              - catch_all
              - forwarding
              - regex
              - master
              - tags
            properties:
              domain:
                type: string
              active:
                type: boolean
              catch_all:
                type: boolean
              forwarding:
                type: boolean
              regex:
                type: boolean
              master:
                type: boolean
              tags:
                type: string
      responses:
        200:
          $ref: '#/definitions/Zone'
        401:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
  /zones/{zone}:
    get:
      summary: Retrieve a specific zone
      parameters:
        - name: zone
          description: If this parameter is a number it will be treated as the Zone Id, otherwise it will be treated as the domain
          in: path
          required: true
          type: string
      tags:
        - zone
      responses:
        200:
          $ref: '#/definitions/Zone'
        401:
          $ref: '#/definitions/Response'
        404:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
    post:
      summary: Update a zone
      tags:
        - zone
      parameters:
        - name: zone
          description: If this parameter is a number it will be treated as the Zone Id, otherwise it will be treated as the domain
          in: path
          required: true
          type: string
        - name: data
          description: Zone data to update
          in: body
          schema:
            type: object
            properties:
              domain:
                type: string
              active:
                type: boolean
              catch_all:
                type: boolean
              forwarding:
                type: boolean
              regex:
                type: boolean
              tags:
                type: string
      responses:
        200:
          $ref: '#/definitions/Zone'
        401:
          $ref: '#/definitions/Response'
        404:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
    delete:
      summary: Delete a zone
      tags:
        - zone
      parameters:
        - name: zone
          description: If this parameter is a number it will be treated as the Zone Id, otherwise it will be treated as the domain
          in: path
          required: true
          type: string
      responses:
        200:
          $ref: '#/definitions/Response'
        401:
          $ref: '#/definitions/Response'
        404:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
  /zones/{zone}/records:
    get:
      summary: Get all zone records
      tags:
        - record
      parameters:
        - name: zone
          description: If this parameter is a number it will be treated as the Zone Id, otherwise it will be treated as the domain
          in: path
          required: true
          type: string
      responses:
        200:
          description: Zone records
          schema:
            type: object
            items:
              $ref: '#/definitions/Record'
        401:
          $ref: '#/definitions/Response'
        404:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
    post:
      summary: Create new record
      tags:
        - record
      parameters:
        - name: zone
          description: If this parameter is a number it will be treated as the Zone Id, otherwise it will be treated as the domain
          in: path
          required: true
          type: string
        - name: record
          in: body
          schema:
            type: object
            required:
              - class
              - type
              - ttl
              - active
              - data
              - is_conditional
              - conditional_count
              - conditional_limit
              - conditional_reset
              - conditional_data
            properties:
              class:
                type: string
              type:
                type: string
              ttl:
                type: integer
              active:
                type: boolean
              data:
                type: object
              is_conditional:
                type: boolean
              conditional_count:
                type: integer
              conditional_limit:
                type: integer
              conditional_reset:
                type: boolean
              conditional_data:
                type: object
      responses:
        200:
          $ref: '#/definitions/Record'
        401:
          $ref: '#/definitions/Response'
        404:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
  /zones/{zone}/records/{id}:
    get:
      summary: Retrieve specific zone record
      tags:
        - record
      parameters:
        - name: zone
          description: If this parameter is a number it will be treated as the Zone Id, otherwise it will be treated as the domain
          in: path
          required: true
          type: string
        - name: id
          description: Record Id
          in: path
          required: true
          type: integer
      responses:
        200:
          $ref: '#/definitions/Record'
        401:
          $ref: '#/definitions/Response'
        404:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
    post:
      summary: Update record
      tags:
        - record
      parameters:
        - name: zone
          description: If this parameter is a number it will be treated as the Zone Id, otherwise it will be treated as the domain
          in: path
          required: true
          type: string
        - name: id
          description: Record Id
          in: path
          required: true
          type: integer
        - name: data
          description: Record data to update
          in: body
          schema:
            type: object
            properties:
              active:
                type: boolean
              class:
                type: string
              type:
                type: string
              ttl:
                type: integer
              data:
                type: object
              is_conditional:
                type: boolean
              conditional_count:
                type: integer
              conditional_limit:
                type: integer
              conditional_reset:
                type: boolean
              conditional_data:
                type: object
      responses:
        200:
          $ref: '#/definitions/Record'
        401:
          $ref: '#/definitions/Response'
        404:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
  /zones/{zone}/notifications:
    get:
      summary: Retrieve all notification subscriptions enabled for the zone
      tags:
        - notification
      parameters:
        - name: zone
          description: If this parameter is a number it will be treated as the Zone Id, otherwise it will be treated as the domain
          in: path
          required: true
          type: string
      responses:
        200:
          description: All zone subscriptions.
          schema:
            type: object
            items:
              $ref: '#/definitions/NotificationSubscription'
        401:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
  /zones/{zone}/notifications/{provider}:
    get:
      summary: Retrieve a specific zone provider
      tags:
        - notification
      parameters:
        - name: zone
          description: If this parameter is a number it will be treated as the Zone Id, otherwise it will be treated as the domain
          in: path
          required: true
          type: string
        - name: provider
          description: Name of the provider
          in: path
          required: true
          type: string
      responses:
        200:
          $ref: '#/definitions/NotificationSubscription'
        401:
          $ref: '#/definitions/Response'
        404:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
    post:
      summary: Update a single notification subscription
      tags:
        - notification
      parameters:
        - name: zone
          description: If this parameter is a number it will be treated as the Zone Id, otherwise it will be treated as the domain
          in: path
          required: true
          type: string
        - name: provider
          description: Name of the provider
          in: path
          required: true
          type: string
        - name: subscription
          description: Properties to update
          in: body
          schema:
            type: object
            properties:
              enabled:
                type: boolean
              data:
                type: object
      responses:
        200:
          $ref: '#/definitions/NotificationSubscription'
        401:
          $ref: '#/definitions/Response'
        404:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
  /zones/{zone}/restrictions:
    get:
      summary: Get all zone IP restrictions
      tags:
        - restrictions
      parameters:
        - name: zone
          description: If this parameter is a number it will be treated as the Zone Id, otherwise it will be treated as the domain
          in: path
          required: true
          type: string
        - name: restriction
          in: body
          schema:
            type: object
            required:
              - type
              - enabled
              - ip_or_range
            properties:
              type:
                type: string
                description: One of allow, block
              enabled:
                type: boolean
              ip_or_range:
                type: string
                description: Either a single IP or a range like 192.168.0.0/24
      responses:
        200:
          description: All zone restrictions.
          schema:
            type: object
            items:
              $ref: '#/definitions/IPRestriction'
        401:
          $ref: '#/definitions/Response'
        404:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
    post:
      summary: Add new restriction
      tags:
        - restrictions
      parameters:
        - name: zone
          description: If this parameter is a number it will be treated as the Zone Id, otherwise it will be treated as the domain
          in: path
          required: true
          type: string
      responses:
        200:
          $ref: '#/definitions/IPRestriction'
        401:
          $ref: '#/definitions/Response'
        404:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
  /zones/{zone}/restrictions/{id}:
    get:
      summary: Retrieve a single IP restriction
      tags:
        - restrictions
      parameters:
        - name: zone
          description: If this parameter is a number it will be treated as the Zone Id, otherwise it will be treated as the domain
          in: path
          required: true
          type: string
        - name: id
          description: Restriction Id
          in: path
          required: true
          type: string
      responses:
        200:
          $ref: '#/definitions/IPRestriction'
        401:
          $ref: '#/definitions/Response'
        404:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
    post:
      summary: Update a single IP restriction
      tags:
        - restrictions
      parameters:
        - name: zone
          description: If this parameter is a number it will be treated as the Zone Id, otherwise it will be treated as the domain
          in: path
          required: true
          type: string
        - name: id
          description: Restriction Id
          in: path
          required: true
          type: string
        - name: restriction
          description: Restriction data to update
          in: body
          schema:
            type: object
            properties:
              type:
                type: string
              enabled:
                type: boolean
              ip_or_range:
                type: string
      responses:
        200:
          $ref: '#/definitions/IPRestriction'
        401:
          $ref: '#/definitions/Response'
        404:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
    delete:
      summary: Delete a single IP restriction
      tags:
        - restrictions
      parameters:
        - name: zone
          description: If this parameter is a number it will be treated as the Zone Id, otherwise it will be treated as the domain
          in: path
          required: true
          type: string
        - name: id
          description: Restriction Id
          in: path
          required: true
          type: string
      responses:
        200:
          $ref: '#/definitions/Response'
        401:
          $ref: '#/definitions/Response'
        404:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
  /records/classes:
    get:
      summary: Retrieve all supported record classes
      tags:
        - record
      responses:
        200:
          description: Supported Record Classes
          schema:
            type: array
            items:
              type: string
  /records/types:
    get:
      summary: Retrieve all supported record types
      tags:
        - record
      responses:
        200:
          description: Supported Record Types
          schema:
            type: array
            items:
              type: string
  /notifications/providers:
    get:
      summary: Retrieve all supported notification providers
      tags:
        - notification
      responses:
        200:
          description: All supported notification providers
          schema:
            type: object
            items:
              $ref: '#/definitions/NotificationProvider'
        401:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
  /search:
    get:
      summary: Search logs
      tags:
        - search
      parameters:
        - name: domain
          in: query
          type: string
        - name: source_ip
          in: query
          type: string
        - name: type
          in: query
          type: string
        - name: class
          in: query
          type: string
        - name: matched
          in: query
          type: boolean
        - name: forwarded
          in: query
          type: boolean
        - name: blocked
          in: query
          type: boolean
        - name: user_id
          in: query
          type: integer
        - name: tags
          in: query
          type: string
        - name: alias
          in: query
          type: string
        - name: date_from
          in: query
          type: string
        - name: time_from
          in: query
          type: string
        - name: date_to
          in: query
          type: string
        - name: time_to
          in: query
          type: string
        - name: page
          in: query
          type: integer
        - name: per_page
          in: query
          type: integer
      responses:
        200:
          $ref: '#/definitions/SearchResult'
        401:
          $ref: '#/definitions/Response'
        500:
          $ref: '#/definitions/Response'
definitions:
  Response:
    type: object
    properties:
      success:
        type: boolean
        description: Result
      code:
        type: integer
        description: Error code, if any
      message:
        type: string
        description: Short description
      details:
        type: string
        description: Additional data
  Pagination:
    type: object
    properties:
      page:
        type: integer
      pages:
        type: integer
      per_page:
        type: integer
      total:
        type: integer
  Zone:
    type: object
    properties:
      id:
        type: integer
      user_id:
        type: integer
      active:
        type: boolean
      catch_all:
        type: boolean
      forwarding:
        type: boolean
      regex:
        type: boolean
      master:
        type: boolean
        description: For non-admin users a 'master' zone is their unique subdomain. For admins this will always be false.
      domain:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
  Record:
    type: object
    properties:
      id:
        type: integer
      zone_id:
        type: integer
      active:
        type: boolean
      cls:
        type: string
      type:
        type: string
      ttl:
        type: integer
      data:
        type: object
      is_conditional:
        type: boolean
      conditional_count:
        type: integer
      conditional_limit:
        type: integer
      conditional_reset:
        type: boolean
      conditional_data:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
  NotificationProvider:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      enabled:
        type: boolean
  NotificationSubscription:
    type: object
    properties:
      zone_id:
        type: integer
      type_id:
        type: integer
      type:
        type: string
      enabled:
        type: boolean
      data:
        type: string
        description: Data for the provider. This can be either a list/object/string.
  SearchResult:
    type: object
    properties:
      page:
        type: integer
      pages:
        type: integer
      total:
        type: integer
      results:
        type: array
        items:
          $ref: '#/definitions/SearchResultItem'
  SearchResultItem:
    type: object
    properties:
      id:
        type: integer
      domain:
        type: string
      source_ip:
        type: string
      type:
        type: string
      cls:
        type: string
      matched:
        type: boolean
      forwarded:
        type: boolean
      blocked:
        type: boolean
      date:
        type: string
  IPRestriction:
    type: object
    properties:
      id:
        type: integer
      ip:
        type: string
      type:
        type: string
      enabled:
        type: boolean